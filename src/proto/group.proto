syntax = "proto3";

package desktop.v1;

option go_package="rpc/desktop/v1;desktop_v1";

// protoc --go_out=. --twirp_out=option_prefix=casbin:. rpc/desktop/v1/group.proto
// 交付组相关接口
service Group {
    // 这里的行尾注释 casbin:rule 用于验证接口权限格式为module-object-action(模块-对象-操作)
    //
	// Get 获取详情
    rpc Get(GroupGetReq) returns (GroupGetResp); // casbin:desktop-machine-list
    // Patch 修改
    rpc PatchPowerStrategy(GroupPatchPowerStrategyReq) returns (GroupPatchPowerStrategyResp); // casbin:desktop-machine_power-patch
}

enum SessionChangeHostingAction {
    SESSION_CHANGE_HOSTING_ACTION_UNSPECIFIED = 0;
    SESSION_CHANGE_HOSTING_ACTION_NOTHING = 1;     // 无操作
    SESSION_CHANGE_HOSTING_ACTION_SUSPEND = 2;     // 挂起
    SESSION_CHANGE_HOSTING_ACTION_SHUTDOWN = 3;    // 关闭
}

message DesktopGroup {
    int64                       desktop_id = 1;               // 云桌面id

    int32                       off_peak_buffer_size_percent = 2; // 非高峰预先启动
    SessionChangeHostingAction  off_peak_disconnect_action  = 3; // 非高峰断开连接
    int64                       off_peak_disconnect_timeout = 4;
    SessionChangeHostingAction  off_peak_log_off_action      = 5; // 非高峰注销
    int64                       off_peak_log_off_timeout     = 6;

    int32                       peak_buffer_size_percent    = 7;    // 高峰预先启动
    SessionChangeHostingAction  peak_disconnect_action     = 8;    // 高峰断开连接
    int64                       peak_disconnect_timeout    = 9;
    SessionChangeHostingAction  peak_log_off_action         = 10;   // 高峰注销
    int64                       peak_log_off_timeout        = 11;
}


message GroupGetReq {
    // @gt:0
	int64 desktop_id = 1;
}

message GroupGetResp {
	// 响应码[机读]
    int32 code = 1;
    // 返回信息，人读
    string msg = 2;
    // 获取结果
    DesktopGroup data = 3;
}


message GroupPatchPowerStrategyReq {
    // @gt:0
    int64 desktop_id = 1;
    bool peak = 2; // 是否高峰
    // @gte:0
    // @lte:100
    int32                       buffer_size_percent    = 3;    // 预先启动
    // @gte:1
    // @lte:3
    SessionChangeHostingAction  disconnect_action     = 4;    // 断开连接
    // @gte:0
    int64                       disconnect_timeout    = 5;
    // @gte:1
    // @lte:3
    SessionChangeHostingAction  log_off_action         = 6;   // 注销
    // @gte:0
    int64                       log_off_timeout        = 7;
}

message GroupPatchPowerStrategyResp {
	// 响应码[机读]
    int32 code = 1;
    // 返回信息，人读
    string msg = 2;
}
